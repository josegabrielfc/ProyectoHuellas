package Vista;

import Modelo.Conexion;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import gnu.io.*;
import static java.awt.image.ImageObserver.ERROR;
import java.awt.*;
import javax.swing.*;
import java.io.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author jgfch
 */
public class SensorDactilar extends javax.swing.JFrame {

    private ImageIcon imagen;
    private Icon icono;
    int xMouse, yMouse;
    String text;
    //VARIABLES QUE PERMITEN ESTABLER LOS PARAMETROS DEL PUERTO 
    //Y CONEXION DEL MISMO
    SerialPort My_PuertoSerie;
    String PUERTO_IdName;
    private static final int TIMEOUT = 2000; //Milisegundos
    private static final int BAUD_RATE = 57600;
    //VARIABLES QUE CAPTURAN Y ENVIA LOS DATOS SERIALES
    private OutputStream output = null;
    private InputStream input_str = null;
    //PERMITE BUSCAR Y ENUMERAR TODOS LOS PUERTOS DISPONIBLES
    java.util.Enumeration<CommPortIdentifier> portEnum = CommPortIdentifier.getPortIdentifiers();
    Connection con;

    /**
     * Creates new form JFrame_Sensor1
     */
    public SensorDactilar() {
        initComponents();
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(JFrame_Sensor.class.getName()).log(Level.SEVERE, null, ex);
        }
        setIconImage(getIconImage());
        this.setLocationRelativeTo(this);
        this.pintarImagen(this.logo, "src/Vista/Images/ufps.PNG");
    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("Vista/Images/ufps_Icon.jpg"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        header = new javax.swing.JPanel();
        btnExit = new javax.swing.JPanel();
        exitTxt = new javax.swing.JLabel();
        logo = new javax.swing.JLabel();
        txt_logo = new javax.swing.JLabel();
        txt2_logo = new javax.swing.JLabel();
        txt_title = new javax.swing.JLabel();
        txt_title1 = new javax.swing.JLabel();
        jCbxPuertos = new javax.swing.JComboBox<>();
        btnBuscar = new javax.swing.JPanel();
        jBtnBuscar = new javax.swing.JLabel();
        btnConectar = new javax.swing.JPanel();
        jBtnConectar = new javax.swing.JLabel();
        btnDesconectar = new javax.swing.JPanel();
        jBtnDesconectar = new javax.swing.JLabel();
        btnRegistrar = new javax.swing.JPanel();
        jBtnEnrolar = new javax.swing.JLabel();
        btnAsistencia = new javax.swing.JPanel();
        jBtnDetectar = new javax.swing.JLabel();
        btnDetenerAsistencia = new javax.swing.JPanel();
        jBtnSalirDetec = new javax.swing.JLabel();
        btnPDF = new javax.swing.JPanel();
        jBtnPDF = new javax.swing.JLabel();
        btnEliminar = new javax.swing.JPanel();
        jBtnEliminar = new javax.swing.JLabel();
        btnBorrarTodo = new javax.swing.JPanel();
        jBtnBorrarTodo = new javax.swing.JLabel();
        btnLimpiar = new javax.swing.JPanel();
        jBtnCleanText = new javax.swing.JLabel();
        jTxtRecibir = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTxtArea = new javax.swing.JTextArea();
        jLabelBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        header.setBackground(new java.awt.Color(0, 0, 0, 0));
        header.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                headerMouseDragged(evt);
            }
        });
        header.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                headerMousePressed(evt);
            }
        });

        btnExit.setBackground(new java.awt.Color(255, 255, 255));

        exitTxt.setFont(new java.awt.Font("Roboto Light", 0, 36)); // NOI18N
        exitTxt.setText(" X");
        exitTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        exitTxt.setMaximumSize(new java.awt.Dimension(40, 40));
        exitTxt.setMinimumSize(new java.awt.Dimension(40, 40));
        exitTxt.setPreferredSize(new java.awt.Dimension(40, 40));
        exitTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitTxtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitTxtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitTxtMouseExited(evt);
            }
        });

        javax.swing.GroupLayout btnExitLayout = new javax.swing.GroupLayout(btnExit);
        btnExit.setLayout(btnExitLayout);
        btnExitLayout.setHorizontalGroup(
            btnExitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnExitLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(exitTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        btnExitLayout.setVerticalGroup(
            btnExitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(exitTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerLayout.createSequentialGroup()
                .addGap(0, 1060, Short.MAX_VALUE)
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel1.add(header, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        logo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));
        logo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 90, 110, 110));

        txt_logo.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        txt_logo.setForeground(new java.awt.Color(255, 255, 255));
        txt_logo.setText("Universidad Francisco");
        txt_logo.setToolTipText("");
        txt_logo.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanel1.add(txt_logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 220, -1, -1));

        txt2_logo.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        txt2_logo.setForeground(new java.awt.Color(255, 255, 255));
        txt2_logo.setText("de Paula Santander");
        jPanel1.add(txt2_logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 240, -1, 30));

        txt_title.setFont(new java.awt.Font("Roboto", 1, 30)); // NOI18N
        txt_title.setForeground(new java.awt.Color(255, 255, 255));
        txt_title.setText("Toma de Asistencia ");
        txt_title.setToolTipText("");
        txt_title.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanel1.add(txt_title, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 470, 290, -1));

        txt_title1.setFont(new java.awt.Font("Roboto", 1, 36)); // NOI18N
        txt_title1.setForeground(new java.awt.Color(255, 255, 255));
        txt_title1.setText("Dactilar");
        txt_title1.setToolTipText("");
        txt_title1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanel1.add(txt_title1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 500, -1, -1));

        jCbxPuertos.setEditable(true);
        jCbxPuertos.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jCbxPuertos.setEnabled(false);
        jPanel1.add(jCbxPuertos, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 70, 210, 60));

        btnBuscar.setBackground(new java.awt.Color(211, 89, 88));

        jBtnBuscar.setFont(new java.awt.Font("Roboto Medium", 0, 18)); // NOI18N
        jBtnBuscar.setForeground(new java.awt.Color(255, 255, 255));
        jBtnBuscar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jBtnBuscar.setText("Buscar Puertos");
        jBtnBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jBtnBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtnBuscarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jBtnBuscarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jBtnBuscarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout btnBuscarLayout = new javax.swing.GroupLayout(btnBuscar);
        btnBuscar.setLayout(btnBuscarLayout);
        btnBuscarLayout.setHorizontalGroup(
            btnBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBtnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
        );
        btnBuscarLayout.setVerticalGroup(
            btnBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBtnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );

        jPanel1.add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 70, 140, 60));

        btnConectar.setBackground(new java.awt.Color(211, 89, 88));

        jBtnConectar.setFont(new java.awt.Font("Roboto Medium", 0, 18)); // NOI18N
        jBtnConectar.setForeground(new java.awt.Color(255, 255, 255));
        jBtnConectar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jBtnConectar.setText("Conectar");
        jBtnConectar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jBtnConectar.setEnabled(false);
        jBtnConectar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtnConectarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jBtnConectarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jBtnConectarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout btnConectarLayout = new javax.swing.GroupLayout(btnConectar);
        btnConectar.setLayout(btnConectarLayout);
        btnConectarLayout.setHorizontalGroup(
            btnConectarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBtnConectar, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
        );
        btnConectarLayout.setVerticalGroup(
            btnConectarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBtnConectar, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );

        jPanel1.add(btnConectar, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 70, 140, 60));

        btnDesconectar.setBackground(new java.awt.Color(211, 89, 88));

        jBtnDesconectar.setFont(new java.awt.Font("Roboto Medium", 0, 18)); // NOI18N
        jBtnDesconectar.setForeground(new java.awt.Color(255, 255, 255));
        jBtnDesconectar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jBtnDesconectar.setText("Desconectar");
        jBtnDesconectar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jBtnDesconectar.setEnabled(false);
        jBtnDesconectar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtnDesconectarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jBtnDesconectarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jBtnDesconectarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout btnDesconectarLayout = new javax.swing.GroupLayout(btnDesconectar);
        btnDesconectar.setLayout(btnDesconectarLayout);
        btnDesconectarLayout.setHorizontalGroup(
            btnDesconectarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBtnDesconectar, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
        );
        btnDesconectarLayout.setVerticalGroup(
            btnDesconectarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBtnDesconectar, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );

        jPanel1.add(btnDesconectar, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 70, 140, 60));

        btnRegistrar.setBackground(new java.awt.Color(211, 89, 88));

        jBtnEnrolar.setFont(new java.awt.Font("Roboto Medium", 0, 18)); // NOI18N
        jBtnEnrolar.setForeground(new java.awt.Color(255, 255, 255));
        jBtnEnrolar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jBtnEnrolar.setText("Registrarse");
        jBtnEnrolar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jBtnEnrolar.setEnabled(false);
        jBtnEnrolar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtnEnrolarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jBtnEnrolarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jBtnEnrolarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout btnRegistrarLayout = new javax.swing.GroupLayout(btnRegistrar);
        btnRegistrar.setLayout(btnRegistrarLayout);
        btnRegistrarLayout.setHorizontalGroup(
            btnRegistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBtnEnrolar, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
        );
        btnRegistrarLayout.setVerticalGroup(
            btnRegistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBtnEnrolar, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );

        jPanel1.add(btnRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 160, 140, 60));

        btnAsistencia.setBackground(new java.awt.Color(211, 89, 88));

        jBtnDetectar.setFont(new java.awt.Font("Roboto Medium", 0, 18)); // NOI18N
        jBtnDetectar.setForeground(new java.awt.Color(255, 255, 255));
        jBtnDetectar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jBtnDetectar.setText("Asistencia");
        jBtnDetectar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jBtnDetectar.setEnabled(false);
        jBtnDetectar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtnDetectarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jBtnDetectarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jBtnDetectarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout btnAsistenciaLayout = new javax.swing.GroupLayout(btnAsistencia);
        btnAsistencia.setLayout(btnAsistenciaLayout);
        btnAsistenciaLayout.setHorizontalGroup(
            btnAsistenciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBtnDetectar, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
        );
        btnAsistenciaLayout.setVerticalGroup(
            btnAsistenciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBtnDetectar, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );

        jPanel1.add(btnAsistencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 250, 140, 60));

        btnDetenerAsistencia.setBackground(new java.awt.Color(211, 89, 88));

        jBtnSalirDetec.setFont(new java.awt.Font("Roboto Medium", 0, 18)); // NOI18N
        jBtnSalirDetec.setForeground(new java.awt.Color(255, 255, 255));
        jBtnSalirDetec.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jBtnSalirDetec.setText("Detener");
        jBtnSalirDetec.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jBtnSalirDetec.setEnabled(false);
        jBtnSalirDetec.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtnSalirDetecMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jBtnSalirDetecMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jBtnSalirDetecMouseExited(evt);
            }
        });

        javax.swing.GroupLayout btnDetenerAsistenciaLayout = new javax.swing.GroupLayout(btnDetenerAsistencia);
        btnDetenerAsistencia.setLayout(btnDetenerAsistenciaLayout);
        btnDetenerAsistenciaLayout.setHorizontalGroup(
            btnDetenerAsistenciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBtnSalirDetec, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
        );
        btnDetenerAsistenciaLayout.setVerticalGroup(
            btnDetenerAsistenciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBtnSalirDetec, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );

        jPanel1.add(btnDetenerAsistencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 340, 140, 60));

        btnPDF.setBackground(new java.awt.Color(211, 89, 88));

        jBtnPDF.setFont(new java.awt.Font("Roboto Medium", 0, 18)); // NOI18N
        jBtnPDF.setForeground(new java.awt.Color(255, 255, 255));
        jBtnPDF.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jBtnPDF.setText("Generar PDF");
        jBtnPDF.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jBtnPDF.setEnabled(false);
        jBtnPDF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtnPDFMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jBtnPDFMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jBtnPDFMouseExited(evt);
            }
        });

        javax.swing.GroupLayout btnPDFLayout = new javax.swing.GroupLayout(btnPDF);
        btnPDF.setLayout(btnPDFLayout);
        btnPDFLayout.setHorizontalGroup(
            btnPDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBtnPDF, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
        );
        btnPDFLayout.setVerticalGroup(
            btnPDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBtnPDF, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );

        jPanel1.add(btnPDF, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 430, 140, 60));

        btnEliminar.setBackground(new java.awt.Color(211, 89, 88));

        jBtnEliminar.setFont(new java.awt.Font("Roboto Medium", 0, 18)); // NOI18N
        jBtnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        jBtnEliminar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jBtnEliminar.setText("Eliminar");
        jBtnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jBtnEliminar.setEnabled(false);
        jBtnEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtnEliminarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jBtnEliminarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jBtnEliminarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout btnEliminarLayout = new javax.swing.GroupLayout(btnEliminar);
        btnEliminar.setLayout(btnEliminarLayout);
        btnEliminarLayout.setHorizontalGroup(
            btnEliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBtnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
        );
        btnEliminarLayout.setVerticalGroup(
            btnEliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBtnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );

        jPanel1.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 510, 140, 60));

        btnBorrarTodo.setBackground(new java.awt.Color(211, 89, 88));

        jBtnBorrarTodo.setFont(new java.awt.Font("Roboto Medium", 0, 18)); // NOI18N
        jBtnBorrarTodo.setForeground(new java.awt.Color(255, 255, 255));
        jBtnBorrarTodo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jBtnBorrarTodo.setText("Borrar Todo");
        jBtnBorrarTodo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jBtnBorrarTodo.setEnabled(false);
        jBtnBorrarTodo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtnBorrarTodoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jBtnBorrarTodoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jBtnBorrarTodoMouseExited(evt);
            }
        });

        javax.swing.GroupLayout btnBorrarTodoLayout = new javax.swing.GroupLayout(btnBorrarTodo);
        btnBorrarTodo.setLayout(btnBorrarTodoLayout);
        btnBorrarTodoLayout.setHorizontalGroup(
            btnBorrarTodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBtnBorrarTodo, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
        );
        btnBorrarTodoLayout.setVerticalGroup(
            btnBorrarTodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBtnBorrarTodo, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );

        jPanel1.add(btnBorrarTodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 590, 140, 60));

        btnLimpiar.setBackground(new java.awt.Color(211, 89, 88));

        jBtnCleanText.setFont(new java.awt.Font("Roboto Medium", 0, 18)); // NOI18N
        jBtnCleanText.setForeground(new java.awt.Color(255, 255, 255));
        jBtnCleanText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jBtnCleanText.setText("Limpiar");
        jBtnCleanText.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jBtnCleanText.setEnabled(false);
        jBtnCleanText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtnCleanTextMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jBtnCleanTextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jBtnCleanTextMouseExited(evt);
            }
        });

        javax.swing.GroupLayout btnLimpiarLayout = new javax.swing.GroupLayout(btnLimpiar);
        btnLimpiar.setLayout(btnLimpiarLayout);
        btnLimpiarLayout.setHorizontalGroup(
            btnLimpiarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBtnCleanText, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
        );
        btnLimpiarLayout.setVerticalGroup(
            btnLimpiarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBtnCleanText, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        jPanel1.add(btnLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 140, 80, 30));

        jTxtRecibir.setEditable(false);
        jPanel1.add(jTxtRecibir, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 140, 480, -1));

        jTxtArea.setEditable(false);
        jTxtArea.setColumns(20);
        jTxtArea.setRows(5);
        jScrollPane1.setViewportView(jTxtArea);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 170, 570, 480));

        jLabelBackground.setBackground(new java.awt.Color(255, 255, 255));
        jLabelBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/Images/city2.png"))); // NOI18N
        jPanel1.add(jLabelBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 670));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 670, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitTxtMouseClicked
        System.exit(0);
    }//GEN-LAST:event_exitTxtMouseClicked

    private void exitTxtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitTxtMouseEntered
        btnExit.setBackground(new java.awt.Color(190, 0, 0));
        exitTxt.setForeground(Color.white);
    }//GEN-LAST:event_exitTxtMouseEntered

    private void exitTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitTxtMouseExited
        btnExit.setBackground(Color.white);
        exitTxt.setForeground(Color.black);
    }//GEN-LAST:event_exitTxtMouseExited

    private void headerMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_headerMouseDragged

    private void headerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_headerMousePressed

    private void jBtnBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnBuscarMouseClicked
        while (portEnum.hasMoreElements()) {
            this.jBtnConectar.setEnabled(true);
            this.jCbxPuertos.setEnabled(true);
            CommPortIdentifier portIdentifier = portEnum.nextElement();
            String Mensajes = portIdentifier.getName() + " - " + getPortTypeName(portIdentifier.getPortType());
            String NombrePuertos = portIdentifier.getName();
            this.jTxtArea.append(Mensajes + "\n");
            this.jCbxPuertos.addItem(NombrePuertos);
        }

    }//GEN-LAST:event_jBtnBuscarMouseClicked

    private void jBtnBuscarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnBuscarMouseEntered
        this.btnBuscar.setBackground(new java.awt.Color(176, 21, 14));
        this.jBtnBuscar.setForeground(Color.white);
    }//GEN-LAST:event_jBtnBuscarMouseEntered

    private void jBtnBuscarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnBuscarMouseExited
        this.btnBuscar.setBackground(new java.awt.Color(211, 89, 88));
        this.jBtnBuscar.setForeground(Color.white);
    }//GEN-LAST:event_jBtnBuscarMouseExited

    private void jBtnConectarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnConectarMouseClicked
        if (!this.jBtnConectar.isEnabled()) {
            return;
        }
        CommPortIdentifier puertoID = null;
        java.util.Enumeration<CommPortIdentifier> listaPuertos = CommPortIdentifier.getPortIdentifiers();

        while (listaPuertos.hasMoreElements()) {
            CommPortIdentifier actualPuertoID = (CommPortIdentifier) listaPuertos.nextElement();
            PUERTO_IdName = jCbxPuertos.getSelectedItem().toString();
            if (PUERTO_IdName.equals(actualPuertoID.getName())) {
                puertoID = actualPuertoID;
                break;
            }
        }

        if (puertoID == null) {
            mostrarError("No se puede conectar al puerto");
            System.exit(ERROR);
        }

        try {
            My_PuertoSerie = (SerialPort) puertoID.open(this.getClass().getName(), TIMEOUT);
            My_PuertoSerie.setSerialPortParams(BAUD_RATE, SerialPort.DATABITS_8, SerialPort.STOPBITS_1, SerialPort.PARITY_NONE);
            input_str = My_PuertoSerie.getInputStream();
            output = My_PuertoSerie.getOutputStream();
            My_PuertoSerie.addEventListener(new SerialReader(input_str));
            My_PuertoSerie.notifyOnDataAvailable(true);

            this.jBtnConectar.setEnabled(false);
            this.jBtnDesconectar.setEnabled(true);
            this.jBtnBuscar.setEnabled(false);
            this.jBtnEnrolar.setEnabled(true);
            this.jBtnDetectar.setEnabled(true);
            this.jBtnSalirDetec.setEnabled(true);
            this.jBtnPDF.setEnabled(true);
            this.jBtnCleanText.setEnabled(true);
            this.jBtnEliminar.setEnabled(true);
            this.jBtnBorrarTodo.setEnabled(true);
        } catch (Exception e) {
            mostrarError(e.getMessage());
            System.exit(ERROR);
        }
    }//GEN-LAST:event_jBtnConectarMouseClicked

    private void jBtnConectarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnConectarMouseEntered
        this.btnConectar.setBackground(new java.awt.Color(176, 21, 14));
        this.jBtnConectar.setForeground(Color.white);
    }//GEN-LAST:event_jBtnConectarMouseEntered

    private void jBtnConectarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnConectarMouseExited
        this.btnConectar.setBackground(new java.awt.Color(211, 89, 88));
        this.jBtnConectar.setForeground(Color.white);
    }//GEN-LAST:event_jBtnConectarMouseExited

    private void jBtnDesconectarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnDesconectarMouseClicked
        if (!this.jBtnDesconectar.isEnabled()) {
            return;
        }
        try {
            My_PuertoSerie.close();
            this.jBtnBuscar.setEnabled(true);
            this.jBtnConectar.setEnabled(true);
            this.jBtnDesconectar.setEnabled(false);

        } catch (Exception e) {
            mostrarError(e.getMessage());
            System.exit(ERROR);
        }
    }//GEN-LAST:event_jBtnDesconectarMouseClicked

    private void jBtnDesconectarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnDesconectarMouseEntered
        this.btnDesconectar.setBackground(new java.awt.Color(176, 21, 14));
        this.jBtnDesconectar.setForeground(Color.white);
    }//GEN-LAST:event_jBtnDesconectarMouseEntered

    private void jBtnDesconectarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnDesconectarMouseExited
        this.btnDesconectar.setBackground(new java.awt.Color(211, 89, 88));
        this.jBtnDesconectar.setForeground(Color.white);
    }//GEN-LAST:event_jBtnDesconectarMouseExited

    private void jBtnEnrolarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnEnrolarMouseClicked
        if (!this.jBtnEnrolar.isEnabled()) {
            return;
        }
        enviarDatos("E");
        JTextField nameField = new JTextField(15);
        JTextField lastField = new JTextField(15);
        JTextField codeField = new JTextField(10);

        JPanel myPanel = new JPanel();
        myPanel.add(new JLabel("Nombres:"));
        myPanel.add(nameField);
        myPanel.add(Box.createHorizontalStrut(25));
        myPanel.add(new JLabel("Apellidos:"));
        myPanel.add(lastField);
        myPanel.add(Box.createHorizontalStrut(25)); // un espaciador
        myPanel.add(new JLabel("Codigo: "));
        myPanel.add(codeField);
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost/tomadeasistencia", "root", "");
            PreparedStatement pst;
            ResultSet rs = null;
            pst = con.prepareStatement("SELECT id FROM estudiante");
            rs = pst.executeQuery();
            int cont = 0; // Obtener en cont el ultimo id que tiene guardado el arduino
//            if (rs.next()) {
//                
//            }
            while (rs.next()) {
                if (cont < rs.getInt(1)) {
                    cont = rs.getInt(1);
                }
            }

            int result = JOptionPane.showConfirmDialog(null, myPanel,
                    "Ingrese los siguientes datos", JOptionPane.OK_CANCEL_OPTION);
            if (result == JOptionPane.OK_OPTION) {
                String nombres = nameField.getText();
                String apellidos = lastField.getText();
                String code = codeField.getText();
                int codigo = Integer.valueOf(code);
                try {
                    ++cont;
                    Statement stmt = con.createStatement();
                    String IdEnrolar = Integer.toString(cont);
                    enviarDatos(IdEnrolar);
                    enviarDatos("\n");
                    stmt.executeUpdate("INSERT INTO estudiante VALUES(" + cont + "," + codigo + ",'" + nombres + "','" + apellidos + "')");
                } catch (SQLException ex) {
                    Logger.getLogger(JFrame_Sensor.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, "No se puede conectar a la base de datos");
                }
            } else {
                emptyDocumentError();
            }
        } catch (SQLException ex) {
            Logger.getLogger(JFrame_Sensor.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "No se puede conectar a la base de datos");
        }
    }//GEN-LAST:event_jBtnEnrolarMouseClicked

    private void jBtnEnrolarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnEnrolarMouseEntered
        this.btnRegistrar.setBackground(new java.awt.Color(176, 21, 14));
        this.jBtnEnrolar.setForeground(Color.white);
    }//GEN-LAST:event_jBtnEnrolarMouseEntered

    private void jBtnEnrolarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnEnrolarMouseExited
        this.btnRegistrar.setBackground(new java.awt.Color(211, 89, 88));
        this.jBtnEnrolar.setForeground(Color.white);
    }//GEN-LAST:event_jBtnEnrolarMouseExited

    private void jBtnDetectarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnDetectarMouseClicked

        if (!this.jBtnDetectar.isEnabled()) {
            return;
        }
        enviarDatos("H");
        //asistenciaHuella();
        /*int id = 0;
        if (asistencia()) {
            try {
                TimeUnit.SECONDS.sleep(4);
            } catch (Exception e) {
                System.out.println(e);
            }
            enviarDatos("X");
            String idTxt = this.jTxtRecibir.getText();
            System.out.println(idTxt);
            id = Integer.valueOf(idTxt);

            while (id != 0) {
                asistenciaHuella(id);
                id = 0;
            }
        }*/

        this.jBtnSalirDetec.setEnabled(true);
        //this.jTxtArea.append("\nIngrese su Huella");
    }//GEN-LAST:event_jBtnDetectarMouseClicked

    private void asistenciaHuella() {
        Calendar c1 = Calendar.getInstance();
        String dia = Integer.toString(c1.get(Calendar.DATE));
        String mes = Integer.toString(c1.get(Calendar.MONTH) + 1);
        String anio = Integer.toString(c1.get(Calendar.YEAR));
        String fecha = "" + dia + "-" + mes + "-" + anio;
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost/tomadeasistencia", "root", "");
            PreparedStatement pst;
            ResultSet rs = null;
            //pst = con.prepareStatement("SELECT codigo FROM estudiante WHERE id=" + id + "");
            pst = con.prepareStatement("SELECT codigo FROM estudiante");
            rs = pst.executeQuery();
            int codigo = 0;
            while (rs.next()) {
                codigo = rs.getInt(1);
                Statement stmt = con.createStatement();
                stmt.executeUpdate("INSERT INTO fecha VALUES(" + codigo + ",'" + fecha + "')");
            }
//            if (rs.next()) {
//                codigo = rs.getInt(1);
//            }
//            Statement stmt = con.createStatement();
//            stmt.executeUpdate("INSERT INTO fecha VALUES(" + codigo + ",'" + fecha + "')");
        } catch (SQLException ex) {
            Logger.getLogger(JFrame_Sensor.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "No se puede conectar a la base de datos");
        }
    }

    private void jBtnDetectarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnDetectarMouseEntered
        this.btnAsistencia.setBackground(new java.awt.Color(176, 21, 14));
        this.jBtnDetectar.setForeground(Color.white);
    }//GEN-LAST:event_jBtnDetectarMouseEntered

    private void jBtnDetectarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnDetectarMouseExited
        this.btnAsistencia.setBackground(new java.awt.Color(211, 89, 88));
        this.jBtnDetectar.setForeground(Color.white);
    }//GEN-LAST:event_jBtnDetectarMouseExited

    private void jBtnSalirDetecMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnSalirDetecMouseClicked
        if (!this.jBtnSalirDetec.isEnabled()) {
            return;
        }
        enviarDatos("X");
    }//GEN-LAST:event_jBtnSalirDetecMouseClicked

    private void jBtnSalirDetecMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnSalirDetecMouseEntered
        this.btnDetenerAsistencia.setBackground(new java.awt.Color(176, 21, 14));
        this.jBtnSalirDetec.setForeground(Color.white);
    }//GEN-LAST:event_jBtnSalirDetecMouseEntered

    private void jBtnSalirDetecMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnSalirDetecMouseExited
        this.btnDetenerAsistencia.setBackground(new java.awt.Color(211, 89, 88));
        this.jBtnSalirDetec.setForeground(Color.white);
    }//GEN-LAST:event_jBtnSalirDetecMouseExited

    private void jBtnEliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnEliminarMouseClicked
        if (!this.jBtnEliminar.isEnabled()) {
            return;
        }
        //enviarDatos("D");//Delete
        String codigo = JOptionPane.showInputDialog(null, "Si desea eliminar una huella digite el codigo", "Sensor de Huella", JOptionPane.QUESTION_MESSAGE);
        int id = 0;
        if ((codigo != null) && (codigo.length() > 0)) {
            int code = Integer.parseInt(codigo);
            try {
                con = DriverManager.getConnection("jdbc:mysql://localhost/tomadeasistencia", "root", "");
                PreparedStatement pst;
                ResultSet rs = null;
                pst = con.prepareStatement("SELECT id FROM estudiante WHERE codigo=" + code + "");
                rs = pst.executeQuery();
                if (rs.next()) {
                    id = rs.getInt(1);
                }
                String idEliminar = Integer.toString(id);
                //enviarDatos(idEliminar);
                //enviarDatos("\n");
                try {
                    Statement stmt = con.createStatement();
                    stmt.executeUpdate("DELETE FROM estudiante WHERE codigo=" + code + "");
                } catch (SQLException ex) {
                    Logger.getLogger(JFrame_Sensor.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, "No se puede borrar el estudiante");
                }
                JOptionPane.showMessageDialog(null, "Se Borro la huella", "Sensor de Huella", JOptionPane.INFORMATION_MESSAGE);
            } catch (SQLException ex) {
                Logger.getLogger(JFrame_Sensor.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "No se puede conectar a la base de datos");
            }
        } else {
            JOptionPane.showMessageDialog(null, "No se pudo borrar la huella", "ERROR", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jBtnEliminarMouseClicked

    private void jBtnEliminarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnEliminarMouseEntered
        this.btnEliminar.setBackground(new java.awt.Color(176, 21, 14));
        this.jBtnEliminar.setForeground(Color.white);
    }//GEN-LAST:event_jBtnEliminarMouseEntered

    private void jBtnEliminarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnEliminarMouseExited
        this.btnEliminar.setBackground(new java.awt.Color(211, 89, 88));
        this.jBtnEliminar.setForeground(Color.white);
    }//GEN-LAST:event_jBtnEliminarMouseExited

    private void jBtnBorrarTodoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnBorrarTodoMouseClicked
        if (!this.jBtnBorrarTodo.isEnabled()) {
            return;
        }
        String password = JOptionPane.showInputDialog(null, "Si desea borrar todas las huellas digite la contraseña", "Sensor de Huella", JOptionPane.QUESTION_MESSAGE);
        String verify = "ingridlamejor";

        if (password.isEmpty()) {
            emptyDocumentError();
            return;
        }
        if ((password != null) && (password.length() > 0) && (password.equals(verify))) {
            enviarDatos("B");
            try {
                con = DriverManager.getConnection("jdbc:mysql://localhost/tomadeasistencia", "root", "");
                Statement stmt = con.createStatement();
                stmt.executeUpdate("DELETE FROM estudiante");
            } catch (SQLException ex) {
                Logger.getLogger(JFrame_Sensor.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "No se puede conectar a la base de datos");
            }
            JOptionPane.showMessageDialog(null, "Se Borraron todas las huellas", "Sensor de Huella", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Contraseña Incorrecta", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBtnBorrarTodoMouseClicked

    private void jBtnBorrarTodoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnBorrarTodoMouseEntered
        this.btnBorrarTodo.setBackground(new java.awt.Color(176, 21, 14));
        this.jBtnBorrarTodo.setForeground(Color.white);
    }//GEN-LAST:event_jBtnBorrarTodoMouseEntered

    private void jBtnBorrarTodoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnBorrarTodoMouseExited
        this.btnBorrarTodo.setBackground(new java.awt.Color(211, 89, 88));
        this.jBtnBorrarTodo.setForeground(Color.white);
    }//GEN-LAST:event_jBtnBorrarTodoMouseExited

    private void jBtnPDFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnPDFMouseClicked
        if (!this.jBtnPDF.isEnabled()) {
            return;
        }

        JPanel myPanel = new JPanel();
        JTextField dayField = new JTextField(15);
        JTextField monthField = new JTextField(15);
        JTextField yearField = new JTextField(10);

        myPanel.add(new JLabel("Dia:"));
        myPanel.add(dayField);
        myPanel.add(Box.createHorizontalStrut(25));
        myPanel.add(new JLabel("Mes:"));
        myPanel.add(monthField);
        myPanel.add(Box.createHorizontalStrut(25)); // un espaciador
        myPanel.add(new JLabel("Año: "));
        myPanel.add(yearField);

        int result = JOptionPane.showConfirmDialog(null, myPanel,
                "Ingrese los siguientes datos: ", JOptionPane.OK_CANCEL_OPTION);
        if (result == JOptionPane.OK_OPTION) {
            String date = dayField.getText() + "-" + monthField.getText() + "-" + yearField.getText();
            try {
                asistenciaHuella();
                crearPdf(date);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(SensorDactilar.class.getName()).log(Level.SEVERE, null, ex);
            } catch (DocumentException ex) {
                Logger.getLogger(SensorDactilar.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            emptyDocumentError();
        }
    }//GEN-LAST:event_jBtnPDFMouseClicked

    private void crearPdf(String date) throws FileNotFoundException, DocumentException {
        Document docPDF = new Document(PageSize.LEGAL.rotate());
        try {
            String nombrePDF = "src/pdf/" + date + ".pdf";
            FileOutputStream ficheroEnDisco = new FileOutputStream(nombrePDF);
            PdfWriter.getInstance(docPDF, ficheroEnDisco);
            docPDF.open();
            Paragraph titulo1 = new Paragraph("LISTADO DE ASISTENCIA\n",
                    FontFactory.getFont("ravie", 24, Font.BOLD)
            );
            docPDF.add(titulo1);
            docPDF.add(pdfAsistencia(date));
            docPDF.close();

        } catch (FileNotFoundException | DocumentException ex) {
            System.err.println(ex.getMessage());
        }
    }

    private PdfPTable pdfAsistencia(String fecha) {
        PdfPTable listado = new PdfPTable(3);
        listado.setSpacingBefore(50);
        listado.setSpacingAfter(50);

        PdfPCell celda = new PdfPCell();
        celda = new PdfPCell(new Phrase("Asistencia Fecha: " + fecha));
        celda.setBackgroundColor(BaseColor.LIGHT_GRAY);
        celda.setColspan(3);
        celda.setHorizontalAlignment(Element.ALIGN_CENTER);
        listado.addCell(celda);

        celda = new PdfPCell(new Phrase("Código"));
        celda.setHorizontalAlignment(Element.ALIGN_CENTER);
        listado.addCell(celda);

        celda = new PdfPCell(new Phrase("Nombres"));
        celda.setHorizontalAlignment(Element.ALIGN_CENTER);
        listado.addCell(celda);

        celda = new PdfPCell(new Phrase("Apellidos"));
        celda.setHorizontalAlignment(Element.ALIGN_CENTER);
        listado.addCell(celda);

        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost/tomadeasistencia", "root", "");
            PreparedStatement pst;
            ResultSet rs = null;
            ResultSet rs2 = null;
            //consulta en la tabla asistencia, obteniendo los codigos de los que coincidan con la fecha a buscar
            pst = con.prepareStatement("SELECT id FROM fecha WHERE fecha_asistencia='" + fecha + "'");
            rs = pst.executeQuery();
            Statement stmt = con.createStatement();
            int codigo = 0;
            while (rs.next()) {
                codigo = rs.getInt(1);
                rs2 = stmt.executeQuery("SELECT * FROM estudiante WHERE codigo=" + codigo + "");
                //consulta en la tabla estudiante con el codigo del rs, obtenemos codigo nombre y apellido del estudiante
                if (rs2.next()) {
                    celda = new PdfPCell(new Phrase("" + rs2.getInt(2)));
                    celda.setHorizontalAlignment(Element.ALIGN_CENTER);
                    listado.addCell(celda);
                    celda = new PdfPCell(new Phrase("" + rs2.getString(3)));
                    celda.setHorizontalAlignment(Element.ALIGN_CENTER);
                    listado.addCell(celda);
                    celda = new PdfPCell(new Phrase("" + rs2.getString(4)));
                    celda.setHorizontalAlignment(Element.ALIGN_CENTER);
                    listado.addCell(celda);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(JFrame_Sensor.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "No se puede conectar a la base de datos");
        }
        return listado;
    }

    private void jBtnPDFMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnPDFMouseEntered
        this.btnPDF.setBackground(new java.awt.Color(176, 21, 14));
        this.jBtnPDF.setForeground(Color.white);
    }//GEN-LAST:event_jBtnPDFMouseEntered

    private void jBtnPDFMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnPDFMouseExited
        this.btnPDF.setBackground(new java.awt.Color(211, 89, 88));
        this.jBtnPDF.setForeground(Color.white);
    }//GEN-LAST:event_jBtnPDFMouseExited

    private void jBtnCleanTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnCleanTextMouseClicked
        if (!this.jBtnCleanText.isEnabled()) {
            return;
        }
        jTxtArea.selectAll();
        jTxtArea.replaceSelection("");
    }//GEN-LAST:event_jBtnCleanTextMouseClicked

    private void jBtnCleanTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnCleanTextMouseEntered
        this.btnLimpiar.setBackground(new java.awt.Color(176, 21, 14));
        this.jBtnCleanText.setForeground(Color.white);
    }//GEN-LAST:event_jBtnCleanTextMouseEntered

    private void jBtnCleanTextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnCleanTextMouseExited
        this.btnLimpiar.setBackground(new java.awt.Color(211, 89, 88));
        this.jBtnCleanText.setForeground(Color.white);
    }//GEN-LAST:event_jBtnCleanTextMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SensorDactilar.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SensorDactilar.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SensorDactilar.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SensorDactilar.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SensorDactilar().setVisible(true);
            }
        });
    }

    private void pintarImagen(JLabel lbl, String ruta) {
        this.imagen = new ImageIcon(ruta);
        this.icono = new ImageIcon(this.imagen.getImage().getScaledInstance(lbl.getWidth(), lbl.getHeight(), Image.SCALE_DEFAULT));

        lbl.setIcon(this.icono);
        this.repaint();
    }

    public void emptyDocumentError() {
        JOptionPane.showMessageDialog(null, "CASILLAS VACÍAS", "ERROR", JOptionPane.ERROR_MESSAGE);
    }

//--------------------------------------------------------------------------
//--------------------------------------------------------------------------
//--------------------------------------------------------------------------
    private void enviarDatos(String datos) {
        try {
            output.write(datos.getBytes());

        } catch (Exception e) {
            mostrarError(e.getMessage());
            System.exit(ERROR);
        }
    }

    static String getPortTypeName(int portType) {
        switch (portType) {
            case CommPortIdentifier.PORT_SERIAL:
                return "Serial";
            default:
                return "unknown type";
        }
    }

    public void mostrarError(String mensaje) {
        JOptionPane.showMessageDialog(this, mensaje, "ERROR", JOptionPane.ERROR_MESSAGE);

    }

    public Connection getCon() {
        return this.con;
    }

    public void setCon(Connection con) {
        this.con = con;
    }

    /*public boolean getActivate(){
        return this.activate;
    }
    
    public void setActivate(boolean valor){
        this.activate = valor;
    }
    
    public void setCodeID(int valor){
        this.codeID = valor;
    }*/
    public class SerialReader implements SerialPortEventListener {

        private InputStream in;
        private byte[] buffer = new byte[1024];
        private StringBuffer cadena = new StringBuffer();
        private String cadena_aux;

        public SerialReader(InputStream in) {
            this.in = in;
        }

        public void serialEvent(SerialPortEvent arg0) {
            int data;

            try {
                cadena_aux = "";

                int len = 0;
                while ((data = in.read()) > -1) {
                    // El carácter de nueva línea (\n) es equivalente al 
                    // carácter de salto de línea ASCII (hex 0A)

                    if (data == '\n') {
                        //if ( data == '&' ) {//Determina que carater se considera como uno final del mensaje.
                        break;
                    }
                    buffer[len++] = (byte) data;
                    cadena = cadena.append((char) data);
                }

                cadena_aux = cadena.toString();

                jTxtRecibir.setText("");
                jTxtRecibir.setText(cadena.toString());
                jTxtArea.append(cadena_aux + "\n");
                cadena.delete(0, cadena.length());

                //A PARTIR DE AQUI ES NECESARIO UTILIZAR LAS VARIABLES
                //cadena_aux  => como string - pues es la unica variable que contiene los valores que ingresaron
                //buffer[x] = Contiene los datos en una matriz
                //int posicion = cadena_aux.indexOf("ID#1");
                //jTextField1.setText(Integer.toString(posicion));
                /*if (cadena_aux.indexOf("ID#1")==0) 
                {
                 jTxtRecibir.setText("");
                 jTxtRecibir.setText("INGRESO USUARIO 1");                
                }
                
                if (cadena_aux.indexOf("ID#2")==0) 
                {
                 jTxtRecibir.setText("");
                 jTxtRecibir.setText("INGRESO USUARIO 2");                
                }
                
                 if (cadena_aux.indexOf("ID#3")==0) 
                {
                 jTxtRecibir.setText("");
                 jTxtRecibir.setText("INGRESO USUARIO 3");                
                }*/
            } catch (Exception e) {
                mostrarError(e.getMessage());
            }
        }
    }

//--------------------------------------------------------------------------
//--------------------------------------------------------------------------
//--------------------------------------------------------------------------
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel btnAsistencia;
    private javax.swing.JPanel btnBorrarTodo;
    private javax.swing.JPanel btnBuscar;
    private javax.swing.JPanel btnConectar;
    private javax.swing.JPanel btnDesconectar;
    private javax.swing.JPanel btnDetenerAsistencia;
    private javax.swing.JPanel btnEliminar;
    private javax.swing.JPanel btnExit;
    private javax.swing.JPanel btnLimpiar;
    private javax.swing.JPanel btnPDF;
    private javax.swing.JPanel btnRegistrar;
    private javax.swing.JLabel exitTxt;
    private javax.swing.JPanel header;
    private javax.swing.JLabel jBtnBorrarTodo;
    private javax.swing.JLabel jBtnBuscar;
    private javax.swing.JLabel jBtnCleanText;
    private javax.swing.JLabel jBtnConectar;
    private javax.swing.JLabel jBtnDesconectar;
    private javax.swing.JLabel jBtnDetectar;
    private javax.swing.JLabel jBtnEliminar;
    private javax.swing.JLabel jBtnEnrolar;
    private javax.swing.JLabel jBtnPDF;
    private javax.swing.JLabel jBtnSalirDetec;
    private javax.swing.JComboBox<String> jCbxPuertos;
    private javax.swing.JLabel jLabelBackground;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTxtArea;
    private javax.swing.JTextField jTxtRecibir;
    private javax.swing.JLabel logo;
    private javax.swing.JLabel txt2_logo;
    private javax.swing.JLabel txt_logo;
    private javax.swing.JLabel txt_title;
    private javax.swing.JLabel txt_title1;
    // End of variables declaration//GEN-END:variables
}
